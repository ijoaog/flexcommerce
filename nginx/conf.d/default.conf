# Redireciona www.flexcommerce.com para sem www via HTTP
server {
    listen 80;
    server_name www.flexcommerce.com;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://flexcommerce.com$request_uri;
    }
}

# Redireciona www.flexcommerce.com para sem www via HTTPS
server {
    listen 443 ssl http2;
    server_name www.flexcommerce.com;

    ssl_certificate /etc/letsencrypt/live/flexcommerce.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/flexcommerce.com/privkey.pem;

    location / {
        return 301 https://flexcommerce.com$request_uri;
    }
}

# Redireciona flexcommerce.com HTTP para HTTPS (sem www)
server {
    listen 80;
    server_name flexcommerce.com;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://flexcommerce.com$request_uri;
    }
}

# Servidor HTTPS principal com reverse proxy para frontend e backend
server {
    listen 443 ssl http2;
    server_name flexcommerce.com;

    ssl_certificate /etc/letsencrypt/live/flexcommerce.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/flexcommerce.com/privkey.pem;

    # Proxy para o frontend (Next.js)
    location / {
        proxy_pass http://frontend:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # Proxy para o backend (NestJS)
    location /api/ {
        proxy_pass http://backend:3003;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}